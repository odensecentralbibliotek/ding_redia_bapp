<?php
/**
 * @file
 * Code for the ding_redia_bapp feature.
 */

include_once 'ding_redia_bapp.features.inc';

/**
 * Implements hook_preprocess_views_view
 */
function ding_redia_bapp_preprocess_views_view(&$vars) {
  $function_name = 'ding_redia_bapp_preprocess_views_view_row_rss__' . $vars['view']->name;
  if (function_exists($function_name)) {
    $function_name($vars);
  }
}

function ding_redia_bapp_preprocess_views_view_row_rss__redia_bapp__feed(&$vars) {
  $rowid = $vars['id'];
  $nodetype = $vars['view']->result[$rowid-1]->_field_data['nid']['entity']->type;
  $created = $vars['view']->result[$rowid-1]->_field_data['nid']['entity']->created;
  // Set event_loc
  $event_loc = '';
  
  if(isset($vars['view']->result[$rowid-1]->_field_data['nid']['entity']->field_ding_event_library['und'])){
  $gid = $vars['view']->result[$rowid-1]->_field_data['nid']['entity']->field_ding_event_library['und'][0]['gid'];
  $library_id = db_query('SELECT etid FROM {og} WHERE gid = :gid', array(':gid' => $gid))->fetchField();
  
    if (!empty($library_id)) {
    $libloc_result = db_query('SELECT   n.title,
                  a.field_ding_library_addresse_thoroughfare AS street,
                  a.field_ding_library_addresse_premise AS additional,
                                a.field_ding_library_addresse_postal_code AS postal_code,
                                a.field_ding_library_addresse_locality AS city,
                                UPPER(a.field_ding_library_addresse_country) AS country
                        FROM node n JOIN field_data_field_ding_library_addresse a
                        ON n.nid = a.entity_id
                        WHERE n.nid = :nid', array(':nid' => $library_id));

    foreach ($libloc_result as $libloc) {
      $loc = $libloc;
      $event_loc = $libloc->street . ', ' . $libloc->postal_code . ', ' . $libloc->city;
    }
  }
 }
 
 elseif (!empty($vars['view']->result[$rowid-1]->field_field_ding_event_location[0]['raw']['thoroughfare'])) {
    $loc = $vars['view']->result[$rowid-1]->field_field_ding_event_location[0]['raw'];
    $event_loc = $loc['thoroughfare'] . ', ' . $loc['postal_code'] . ' ' . $loc['locality'];
  }
  
  $vars['event_loc'] = $event_loc;

  // Set event_start + event_end
  $event_start = null;
  $event_end = null;
  if (isset($vars['view']->result[$rowid-1]->field_field_ding_event_date)) {
    $timezone = $vars['view']->result[$rowid-1]->field_field_ding_event_date[0]['raw']['timezone'];
    $time_value = $vars['view']->result[$rowid-1]->field_field_ding_event_date[0]['raw']['value'];
    $time_value2 = $vars['view']->result[$rowid-1]->field_field_ding_event_date[0]['raw']['value2'];
    $event_start = strtotime($time_value . ' '. $timezone);
    $event_end = strtotime($time_value2 . ' '. $timezone);
  }
  $vars['event_start'] = $event_start;
  $vars['event_end'] = $event_end;

  // Set display_start
  $vars['display_start'] = $created;

  // Set display_end
  switch ($nodetype) {
    case "ding_news":
      // display end time is created date + 14 days
      $display_end = ((int) $created) + 3600 + (14*24*60*60);
      break;
    case "ding_event":
      $display_end = $event_start;
      break;
    default:
      break;
  }
  $vars['display_end'] = $display_end;

  // Set image_path
  $image_style = '';
  $image_uri = '';
  switch ($nodetype) {
    case "ding_news":
      if (!empty($vars['view']->result[$rowid-1]->field_field_ding_news_list_image)) {
        $image_uri = $vars['view']->result[$rowid-1]->field_field_ding_news_list_image[0]['rendered']['#item']['uri'];
        $image_style = $vars['view']->result[$rowid-1]->field_field_ding_news_list_image[0]['rendered']['#image_style'];
      }
      break;
    case "ding_event":
      if (!empty($vars['view']->result[$rowid-1]->field_field_ding_event_list_image)) {
        $image_uri = $vars['view']->result[$rowid-1]->field_field_ding_event_list_image[0]['rendered']['#item']['uri'];
        $image_style = $vars['view']->result[$rowid-1]->field_field_ding_event_list_image[0]['rendered']['#image_style'];
      }
      break;
    default:
      break;
  }
  // apply image style and get full image path
  if (!empty($image_style)) {
    $image_path = image_style_url($image_style, $image_uri);
  }
  else {
    $image_path = '';
  }
  $vars['image_path'] = $image_path;
}

/**
 * Implements hook_theme().
 *
 * See http://views-help.doc.logrus.com/help/views/api-default-views
 * for help with providing default .tpl files for your views
 */
function ding_redia_bapp_theme($existing, $path) {
  $path = drupal_get_path('module', 'ding_redia_bapp') . '/templates';
  return array(
    'views_view_rss__redia_bapp__feed' => array(
      'arguments' => array('view' => NULL, 'options' => NULL, 'rows' => NULL, 'title' => NULL),
      'template' => 'views-view-rss--redia-bapp--feed',
      'original hook' => 'views_view_rss',
      'path' => $path,
      'preprocess functions' => array(
        'template_preprocess',
        'template_preprocess_views_view_rss',
        'ding_redia_bapp_preprocess_views_view_rss__redia_bapp__feed',
      ),
    ),
    'views_view_row_rss__redia_bapp__feed' => array(
      'arguments' => array('view' => NULL, 'options' => NULL, 'row' => NULL),
      'template' => 'views-view-row-rss--redia-bapp--feed',
      'original hook' => 'views_view_row_rss',
      'path' => $path,
      'preprocess functions' => array(
        'template_preprocess',
        'template_preprocess_views_view_row_rss',
        'ding_redia_bapp_preprocess_views_view_row_rss__redia_bapp__feed',
      ),
    ),
  );
}
